name: Update Calendar

on:
  workflow_dispatch:
  schedule:
    - cron: "0 14 * * *"  # 每天 22:00 自动运行

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ 检出代码仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保完整历史，保证 `.ics` 文件能被跟踪

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 📦 安装依赖
        run: npm ci

      - name: 🔄 运行数据获取脚本并生成 ICS 文件
        run: |
          set -e
          echo "🛰️ 获取数据..."
          node scripts/fetch-data.js
          echo "📅 生成 ICS 文件..."
          node scripts/generate-ics.js

      - name: ⚠️ 确保 `calendar.ics` 存在
        run: |
          if [ ! -f "scripts/calendar.ics" ]; then
            echo "⚠️ calendar.ics 文件未找到，检查生成是否成功"
            exit 1
          fi

      - name: ⚙️ 检查是否有更改
        id: check_changes
        run: |
          echo "🔍 检查是否有更改..."
          git status --porcelain
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "📝 检测到更改"
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "没有更改"
            echo "changes=false" >> $GITHUB_ENV
          fi

      - name: 🚀 提交更改
        if: env.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"

          git fetch origin main
          git pull --rebase origin main

          git add -f scripts/calendar.ics
          git commit -m "🔄 更新数据和 calendar.ics"
          git push origin main

      - name: 🏗️ 创建 Pull Request
        if: env.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          title: "更新数据和 calendar.ics"
          branch: "update-calendar"
          commit-message: "更新数据和 calendar.ics"
          delete-branch: true
          base: main