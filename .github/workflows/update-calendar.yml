name: Update Calendar

on:
  workflow_dispatch:
  schedule:
    - cron: "0 14 * * *"  # 每天 22:00 自动运行

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📂 确保数据目录存在
        run: mkdir -p data/Document

      - name: ⚡️ 缓存 Node.js 依赖
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 安装依赖
        run: npm ci

      - name: 📡 获取数据 (`fetch-data.js`)
        run: |
          set -e
          echo "📥 开始获取数据..."
          node scripts/fetch-data.js
          echo "✅ 数据获取成功！"

      - name: 🔍 确保 JSON 数据已写入
        run: |
          echo "🛠️ 确保数据文件已正确写入..."
          for file in data/Document/calendar.json data/Document/astro.json data/Document/shichen.json data/Document/jieqi.json data/Document/holidays.json; do
            if [ ! -s "$file" ]; then
              echo "❌ 错误: $file 为空或未写入！终止执行。"
              exit 1
            fi
          done
          echo "✅ 所有数据文件已正确写入！"

      - name: 📅 生成 ICS (`generate-ics.js`)
        run: |
          echo "📅 开始生成 ICS 文件..."
          node scripts/generate-ics.js
          echo "✅ ICS 文件生成成功！"

      - name: 🔍 检查文件变更
        id: check_changes
        run: |
          echo "🛠️ 检查是否有文件更改..."
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "🔄 检测到文件变更。"
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "✅ 没有文件变更，无需提交。"
            echo "changes=false" >> $GITHUB_ENV
          fi

      - name: 📝 提交并推送更改
        if: env.changes == 'true'
        run: |
          echo "🚀 提交更改..."
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"

          git fetch origin main
          git pull --rebase origin main
          
          git add .
          git commit -m "🔄 更新数据和 calendar.ics"
          git push origin main

      - name: 🔀 创建 Pull Request
        if: env.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          title: "🔄 更新数据和 calendar.ics"
          branch: "update-calendar"
          commit-message: "🔄 更新数据和 calendar.ics"
          delete-branch: true
          base: main